// RegisterForm.jsx

import React, { useState, useContext } from "react";
import { useHistory } from "react-router-dom";
import '../css/Home.css'
import '../css/register.css';
import { VolunteerContext } from "../context/VolunteerContext";
import { UserMasterContext } from "../context/UserMasterContext";
import BasePath from "../apis/BasePath";

// vol_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
// um_login_id character varying(20) COLLATE pg_catalog."default" NOT NULL,
// um_seq numeric NOT NULL,
// um_password character varying(20) COLLATE pg_catalog."default" NOT NULL,
// um_role numeric,
// um_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
// um_address character varying(100) COLLATE pg_catalog."default" NOT NULL,
// um_email character varying(20) COLLATE pg_catalog."default" NOT NULL,
// um_unique_id character varying(20) COLLATE pg_catalog."default" NOT NULL,


const RegisterForm = () => {
    const { addVolunteers } = useContext(VolunteerContext);
    const { addUserMasters } = useContext(UserMasterContext);
    const [vol_id, setVolId] = useState("");
    const [um_seq, setUmSeq] = useState("");
    const [um_login_id, setUmLoginId] = useState("");
    const [um_password, setUmPassword] = useState("");
    const [um_role, setUmRole] = useState(0);
    const [um_name, setUmName] = useState("");
    const [um_address, setUmAddress] = useState("");
    const [um_email, setUmEmail] = useState("");
    const [um_unique_id, setUmUniqueId] = useState("");
    const [um_created_time, setUmCreatedTime] = useState("");
  
    const d = new Date();
    let hour = d.getHours();
    let mins = d.getMinutes();
    let secs = d.getSeconds();
    let date = d.getDate();
    let mon = d.getMonth() + 1;
    let year = d.getFullYear();

    const handleSubmit = async (e) => {
        e.preventDefault();

        if(um_role == 11){
        try {
        
          const response = await BasePath.post("/userMasters", {
            um_seq,
            um_login_id,
            um_password,
            um_role,
            um_name,
            um_address,
            um_email,
            um_unique_id,
            um_created_time : date+"/"+mon+"/"+year
            // +"\n" +hour+"Hours"+ mins +"Minutes"+ secs +"Seconds"
          });
          console.log(response.data.data);
          addUserMasters(response.data.data.User_Masters);
          alert('User Added');
          history.push("/");  
        } catch (err) {
          alert(err)
          console.log(err);
        }
      }
      else if(um_role == 12){
        try {
            const response = await BasePath.post("/volunteer", {
              vol_id,
              um_seq,
              um_login_id,
              um_password,
              um_role,
              um_name,
              um_address,
              um_email,
              um_unique_id,
              um_created_time : date+"/"+mon+"/"+year
              //"\n" +hour+"Hours"+ mins +"Minutes"+ secs +"Seconds"
            }
      
            );
            console.log(response.data.data);
            addVolunteers(response.data.data.Volunteers);
            alert('Volunteer Added');
            history.push("/");
          } catch (err) {
            alert(err)
            console.log(err);
          }
          
      }
    };

    const history = useHistory();
    const handleLogin = () => {
        history.push("/");
    };

    return (
        <div className="signup-form">
            <form>
                <h2>Register</h2>
                <div className="form-group">
                    <div className="row">
                        <div className="col">
                            <label>Role</label>
                            <input type="number" className="form-control" name="role" placeholder="Role" required 
                            value={um_role}
                            onChange={(e) => setUmRole(e.target.value)}
                            />
                        </div>
                        <div className="row">
                            <div className="col">
                            {/* <label>Full Name</label>
                            <input type="text" className="form-control" name="first_name" placeholder="First Name" required 
                            value={um_name}
                            onChange={(e) => setUmName(e.target.value)}
                            /> */}
                            </div>
                        </div>
                    </div>
                </div>

                <div className="form-group">
                    <div className="row">
                            <div className="col">
                            <label>Full Name</label>
                            <input type="text" className="form-control" name="um_name" placeholder="Full Name" required 
                            value={um_name}
                            onChange={(e) => setUmName(e.target.value)}
                            />
                            </div>
                            {/* <div className="col">
                            <label>Role</label>
                            <input type="text" className="form-control" name="role" placeholder="Role" required 
                            value={um_role}
                            onChange={(e) => setUmRole(e.target.value)}
                            />
                        </div> */}
                    </div>
                </div>

                <div className="form-group">
                    <div className="row">
                    <div className="col">
                            <label>Unique ID</label>
                            <input type="text" className="form-control" name="unique_id" placeholder="Unique ID" required
                            value={um_unique_id}
                            onChange={(e) => setUmUniqueId(e.target.value)}
                             />
                        </div>
                        <div className="col">
                        <label>Volunteer / Employee ID</label>
                            <input type="text" className="form-control" name="Vol/Emp ID" placeholder="Last Name" required
                            value={um_role == 11 ? um_seq : vol_id}
                            onChange={(e) => um_role == 11 ? setUmSeq(e.target.value) : setVolId(e.target.value)}
                             />
                        </div>
                    </div>
                </div>

                <div className="form-group">
                    <div className="row">
                        <div className="col">
                            <label>Login ID</label>
                            <input type="text" className="form-control" name="login_id" placeholder="Login ID" required
                            value={um_login_id}
                            onChange={(e) => setUmLoginId(e.target.value)}
                             />
                        </div>
                        <div className="col">
                        <label>Password</label>
                            <input type="password" className="form-control" name="password" placeholder="Password" required 
                            value={um_password}
                            onChange={(e) => setUmPassword(e.target.value)}
                            />
                        </div>
                    </div>
                </div>

                {/* <div className="form-group">
                    <div className="row">
                        <div className="col">
                            <label>Unique ID</label>
                            <input type="text" className="form-control" name="unique_id" placeholder="Unique ID" required />
                        </div>
                        <div className="row">
                            <div className="col"></div>
                        </div>
                    </div>
                </div> */}

                <div className="form-group">
                    <label>Address</label>
                    <input type="address" className="form-control" name="address" placeholder="Address" required
                    value={um_address}
                    onChange={(e) => setUmAddress(e.target.value)}
                     />
                </div>

                <div className="form-group">
                    <label>Email</label>
                    <input type="email" className="form-control" name="email" placeholder="Email" required
                    value={um_email}
                    onChange={(e) => setUmEmail(e.target.value)}
                     />
                </div>
                <div className="form-group">
                    <label className="form-check-label">
                        <input type="checkbox" required /> I accept the
                        <a href="#"> Terms of Use</a> &amp;
                        <a href="#"> Privacy Policy</a>
                    </label>
                </div>
                <div className="form-group">
                    <button className="btn btn-lg btn-block" onClick={handleSubmit}>Register Now</button>
                </div>

                
            <div className="text-center">
                Already have an account?
                <span onClick={handleLogin}> Sign in</span>
            </div>
            </form>
        </div>
    );
};

export default RegisterForm;